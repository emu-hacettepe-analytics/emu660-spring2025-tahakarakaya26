[
  {
    "objectID": "assignments/assignment-1.html",
    "href": "assignments/assignment-1.html",
    "title": "Assignment 1",
    "section": "",
    "text": "My first assignment has three parts."
  },
  {
    "objectID": "assignments/assignment-1.html#a-discussion-on-data-science-and-industrial-engineering---kerem-demirtas-erdi-dasdemir",
    "href": "assignments/assignment-1.html#a-discussion-on-data-science-and-industrial-engineering---kerem-demirtas-erdi-dasdemir",
    "title": "Assignment 1",
    "section": "a) Discussion on Data Science and Industrial Engineering - Kerem Demirtas & Erdi Dasdemir",
    "text": "a) Discussion on Data Science and Industrial Engineering - Kerem Demirtas & Erdi Dasdemir\nYou can access the related discussion through this link. (https://www.youtube.com/watch?v=cUPtQEyaswM)\n\nThe Integration of Industrial Engineering and Data Science: A Key to Smarter Decision-Making\nThe integration of industrial engineering (IE) and data science (DS) is becoming increasingly important in today’s business world. This discussion particularly focused on how industrial engineers can enhance their analytical skills and transition into the field of data science. The relationship between traditional optimization techniques and machine learning was explored, highlighting that deterministic modeling methods may fall short in highly variable and uncertain environments. As a result, data-driven approaches such as event-based simulation, probabilistic modeling, and statistical learning are gaining more significance. It was also emphasized that essential competencies for industrial engineers in this field include proficiency in SQL, Python, and statistical analysis tools. Data-driven decision support systems have the potential to solve traditional industrial engineering problems—such as supply chain management, logistics, and inventory optimization—much more efficiently.\nMoreover, it was underscored that theoretical knowledge alone is not sufficient; working on real-world problems is essential. Platforms like Kaggle provide valuable opportunities to develop hands-on projects, connect with professionals in the field, and focus on industry-specific challenges, all of which are crucial for career development. For instance, an industrial engineer applying data science to demand forecasting, production planning, or operational efficiency can gain a significant competitive edge. Many conventional engineering problems can now be enhanced using machine learning-based forecasting models, time series analysis, and big data solutions, ultimately leading to smarter and more optimized processes. Lastly, the discussion emphasized that industrial engineers should not only focus on developing models but also understand business processes, accurately define problems, and implement strategic, optimized solutions.\n\n\nPersonal Takeaways and Career Development\nAs a recent graduate working in planning operations, I have had the opportunity to closely observe the growing importance of integrating data science into business processes. Through this experience, I have realized the critical role of data analytics and automation tools in strengthening decision support systems. To enhance efficiency in reporting processes, I have been improving my automation skills while also leveraging predictive models to support strategic decision-making. Moving forward, I aim to further develop my expertise in statistical analysis, machine learning, and optimization techniques to create added value in business processes."
  },
  {
    "objectID": "assignments/assignment-1.html#b-statistical-summaries-with-custom-functions-and-iteration-methods-in-mtcars-dataset",
    "href": "assignments/assignment-1.html#b-statistical-summaries-with-custom-functions-and-iteration-methods-in-mtcars-dataset",
    "title": "Assignment 1",
    "section": "b) Statistical Summaries with Custom Functions and Iteration Methods in mtcars dataset:",
    "text": "b) Statistical Summaries with Custom Functions and Iteration Methods in mtcars dataset:\n\nimport data\n\ndata(mtcars)\nmtcars\n\n                     mpg cyl  disp  hp drat    wt  qsec vs am gear carb\nMazda RX4           21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4\nMazda RX4 Wag       21.0   6 160.0 110 3.90 2.875 17.02  0  1    4    4\nDatsun 710          22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1\nHornet 4 Drive      21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1\nHornet Sportabout   18.7   8 360.0 175 3.15 3.440 17.02  0  0    3    2\nValiant             18.1   6 225.0 105 2.76 3.460 20.22  1  0    3    1\nDuster 360          14.3   8 360.0 245 3.21 3.570 15.84  0  0    3    4\nMerc 240D           24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2\nMerc 230            22.8   4 140.8  95 3.92 3.150 22.90  1  0    4    2\nMerc 280            19.2   6 167.6 123 3.92 3.440 18.30  1  0    4    4\nMerc 280C           17.8   6 167.6 123 3.92 3.440 18.90  1  0    4    4\nMerc 450SE          16.4   8 275.8 180 3.07 4.070 17.40  0  0    3    3\nMerc 450SL          17.3   8 275.8 180 3.07 3.730 17.60  0  0    3    3\nMerc 450SLC         15.2   8 275.8 180 3.07 3.780 18.00  0  0    3    3\nCadillac Fleetwood  10.4   8 472.0 205 2.93 5.250 17.98  0  0    3    4\nLincoln Continental 10.4   8 460.0 215 3.00 5.424 17.82  0  0    3    4\nChrysler Imperial   14.7   8 440.0 230 3.23 5.345 17.42  0  0    3    4\nFiat 128            32.4   4  78.7  66 4.08 2.200 19.47  1  1    4    1\nHonda Civic         30.4   4  75.7  52 4.93 1.615 18.52  1  1    4    2\nToyota Corolla      33.9   4  71.1  65 4.22 1.835 19.90  1  1    4    1\nToyota Corona       21.5   4 120.1  97 3.70 2.465 20.01  1  0    3    1\nDodge Challenger    15.5   8 318.0 150 2.76 3.520 16.87  0  0    3    2\nAMC Javelin         15.2   8 304.0 150 3.15 3.435 17.30  0  0    3    2\nCamaro Z28          13.3   8 350.0 245 3.73 3.840 15.41  0  0    3    4\nPontiac Firebird    19.2   8 400.0 175 3.08 3.845 17.05  0  0    3    2\nFiat X1-9           27.3   4  79.0  66 4.08 1.935 18.90  1  1    4    1\nPorsche 914-2       26.0   4 120.3  91 4.43 2.140 16.70  0  1    5    2\nLotus Europa        30.4   4  95.1 113 3.77 1.513 16.90  1  1    5    2\nFord Pantera L      15.8   8 351.0 264 4.22 3.170 14.50  0  1    5    4\nFerrari Dino        19.7   6 145.0 175 3.62 2.770 15.50  0  1    5    6\nMaserati Bora       15.0   8 301.0 335 3.54 3.570 14.60  0  1    5    8\nVolvo 142E          21.4   4 121.0 109 4.11 2.780 18.60  1  1    4    2\n\n\n\n\ndiscover the mtcars dataset\n\nstr(mtcars)\n\n'data.frame':   32 obs. of  11 variables:\n $ mpg : num  21 21 22.8 21.4 18.7 18.1 14.3 24.4 22.8 19.2 ...\n $ cyl : num  6 6 4 6 8 6 8 4 4 6 ...\n $ disp: num  160 160 108 258 360 ...\n $ hp  : num  110 110 93 110 175 105 245 62 95 123 ...\n $ drat: num  3.9 3.9 3.85 3.08 3.15 2.76 3.21 3.69 3.92 3.92 ...\n $ wt  : num  2.62 2.88 2.32 3.21 3.44 ...\n $ qsec: num  16.5 17 18.6 19.4 17 ...\n $ vs  : num  0 0 1 1 0 1 0 1 1 1 ...\n $ am  : num  1 1 1 0 0 0 0 0 0 0 ...\n $ gear: num  4 4 4 3 3 3 3 4 4 4 ...\n $ carb: num  4 4 1 1 2 1 4 2 2 4 ...\n\nsummary(mtcars)\n\n      mpg             cyl             disp             hp       \n Min.   :10.40   Min.   :4.000   Min.   : 71.1   Min.   : 52.0  \n 1st Qu.:15.43   1st Qu.:4.000   1st Qu.:120.8   1st Qu.: 96.5  \n Median :19.20   Median :6.000   Median :196.3   Median :123.0  \n Mean   :20.09   Mean   :6.188   Mean   :230.7   Mean   :146.7  \n 3rd Qu.:22.80   3rd Qu.:8.000   3rd Qu.:326.0   3rd Qu.:180.0  \n Max.   :33.90   Max.   :8.000   Max.   :472.0   Max.   :335.0  \n      drat             wt             qsec             vs        \n Min.   :2.760   Min.   :1.513   Min.   :14.50   Min.   :0.0000  \n 1st Qu.:3.080   1st Qu.:2.581   1st Qu.:16.89   1st Qu.:0.0000  \n Median :3.695   Median :3.325   Median :17.71   Median :0.0000  \n Mean   :3.597   Mean   :3.217   Mean   :17.85   Mean   :0.4375  \n 3rd Qu.:3.920   3rd Qu.:3.610   3rd Qu.:18.90   3rd Qu.:1.0000  \n Max.   :4.930   Max.   :5.424   Max.   :22.90   Max.   :1.0000  \n       am              gear            carb      \n Min.   :0.0000   Min.   :3.000   Min.   :1.000  \n 1st Qu.:0.0000   1st Qu.:3.000   1st Qu.:2.000  \n Median :0.0000   Median :4.000   Median :2.000  \n Mean   :0.4062   Mean   :3.688   Mean   :2.812  \n 3rd Qu.:1.0000   3rd Qu.:4.000   3rd Qu.:4.000  \n Max.   :1.0000   Max.   :5.000   Max.   :8.000  \n\n\n\n\ncompute_stats\n\ncompute_stats &lt;- function(x) {\n  stats &lt;- list(\n    mean = mean(x, na.rm = TRUE),\n    median = median(x, na.rm = TRUE),\n    variance = var(x, na.rm = TRUE),\n    iqr = IQR(x, na.rm = TRUE),\n    min = min(x, na.rm = TRUE),\n    max = max(x, na.rm = TRUE)\n  )\n  return(stats)\n}\n\n\n\ndf of compute_stats\n\ncompute_stats &lt;- function(x) {\n  stats &lt;- list(\n    mean = mean(x, na.rm = TRUE),\n    median = median(x, na.rm = TRUE),\n    variance = var(x, na.rm = TRUE),\n    iqr = IQR(x, na.rm = TRUE),\n    min = min(x, na.rm = TRUE),\n    max = max(x, na.rm = TRUE)\n  )\n  return(stats)\n}\n\nstats_df &lt;- data.frame(Column = character(),\n                       Mean = numeric(),\n                       Median = numeric(),\n                       Variance = numeric(),\n                       IQR = numeric(),\n                       Min = numeric(),\n                       Max = numeric(),\n                       stringsAsFactors = FALSE)\n\nfor (col in names(mtcars)) {\n  \n  if (is.numeric(mtcars[[col]])) {\n    \n    stats &lt;- compute_stats(mtcars[[col]])\n    \n    new_row &lt;- data.frame(Column = col,\n                          Mean = stats$mean,\n                          Median = stats$median,\n                          Variance = stats$variance,\n                          IQR = stats$iqr,\n                          Min = stats$min,\n                          Max = stats$max,\n                          stringsAsFactors = FALSE)\n    \n    stats_df &lt;- rbind(stats_df, new_row)\n  }\n}\n\nlibrary(knitr)\nkable(stats_df, caption = \"Stats Df\")\n\n\nStats Df\n\n\nColumn\nMean\nMedian\nVariance\nIQR\nMin\nMax\n\n\n\n\nmpg\n20.090625\n19.200\n3.632410e+01\n7.37500\n10.400\n33.900\n\n\ncyl\n6.187500\n6.000\n3.189516e+00\n4.00000\n4.000\n8.000\n\n\ndisp\n230.721875\n196.300\n1.536080e+04\n205.17500\n71.100\n472.000\n\n\nhp\n146.687500\n123.000\n4.700867e+03\n83.50000\n52.000\n335.000\n\n\ndrat\n3.596563\n3.695\n2.858814e-01\n0.84000\n2.760\n4.930\n\n\nwt\n3.217250\n3.325\n9.573790e-01\n1.02875\n1.513\n5.424\n\n\nqsec\n17.848750\n17.710\n3.193166e+00\n2.00750\n14.500\n22.900\n\n\nvs\n0.437500\n0.000\n2.540323e-01\n1.00000\n0.000\n1.000\n\n\nam\n0.406250\n0.000\n2.489919e-01\n1.00000\n0.000\n1.000\n\n\ngear\n3.687500\n4.000\n5.443548e-01\n1.00000\n3.000\n5.000\n\n\ncarb\n2.812500\n2.000\n2.608871e+00\n2.00000\n1.000\n8.000\n\n\n\n\n\n\n\nwith sapply\n\ndata(mtcars)\ncompute_stats &lt;- function(x) {\n  c(Mean = mean(x, na.rm = TRUE),\n    Median = median(x, na.rm = TRUE),\n    Variance = var(x, na.rm = TRUE),\n    IQR = IQR(x, na.rm = TRUE),\n    Min = min(x, na.rm = TRUE),\n    Max = max(x, na.rm = TRUE))\n}\nstats_matrix &lt;- sapply(mtcars, compute_stats)\nstats_df &lt;- as.data.frame(t(stats_matrix))\nstats_df &lt;- cbind(Column = rownames(stats_df), stats_df)\nrownames(stats_df) &lt;- NULL\n\nlibrary(knitr)\nkable(stats_df, caption = \"Stats Df\")\n\n\nStats Df\n\n\nColumn\nMean\nMedian\nVariance\nIQR\nMin\nMax\n\n\n\n\nmpg\n20.090625\n19.200\n3.632410e+01\n7.37500\n10.400\n33.900\n\n\ncyl\n6.187500\n6.000\n3.189516e+00\n4.00000\n4.000\n8.000\n\n\ndisp\n230.721875\n196.300\n1.536080e+04\n205.17500\n71.100\n472.000\n\n\nhp\n146.687500\n123.000\n4.700867e+03\n83.50000\n52.000\n335.000\n\n\ndrat\n3.596563\n3.695\n2.858814e-01\n0.84000\n2.760\n4.930\n\n\nwt\n3.217250\n3.325\n9.573790e-01\n1.02875\n1.513\n5.424\n\n\nqsec\n17.848750\n17.710\n3.193166e+00\n2.00750\n14.500\n22.900\n\n\nvs\n0.437500\n0.000\n2.540323e-01\n1.00000\n0.000\n1.000\n\n\nam\n0.406250\n0.000\n2.489919e-01\n1.00000\n0.000\n1.000\n\n\ngear\n3.687500\n4.000\n5.443548e-01\n1.00000\n3.000\n5.000\n\n\ncarb\n2.812500\n2.000\n2.608871e+00\n2.00000\n1.000\n8.000"
  },
  {
    "objectID": "assignments/assignment-1.html#c-dslabs-missing-values",
    "href": "assignments/assignment-1.html#c-dslabs-missing-values",
    "title": "Assignment 1",
    "section": "c) dslabs, missing values",
    "text": "c) dslabs, missing values\n\nlibrary(dslabs)\ndata(na_example)\nna_example\n\n   [1]  2  1  3  2  1  3  1  4  3  2  2 NA  2  2  1  4 NA  1  1  2  1  2  2  1\n  [25]  2  5 NA  2  2  3  1  2  4  1  1  1  4  5  2  3  4  1  2  4  1  1  2  1\n  [49]  5 NA NA NA  1  1  5  1  3  1 NA  4  4  7  3  2 NA NA  1 NA  4  1  2  2\n  [73]  3  2  1  2  2  4  3  4  2  3  1  3  2  1  1  1  3  1 NA  3  1  2  2  1\n  [97]  2  2  1  1  4  1  1  2  3  3  2  2  3  3  3  4  1  1  1  2 NA  4  3  4\n [121]  3  1  2  1 NA NA NA NA  1  5  1  2  1  3  5  3  2  2 NA NA NA NA  3  5\n [145]  3  1  1  4  2  4  3  3 NA  2  3  2  6 NA  1  1  2  2  1  3  1  1  5 NA\n [169] NA  2  4 NA  2  5  1  4  3  3 NA  4  3  1  4  1  1  3  1  1 NA NA  3  5\n [193]  2  2  2  3  1  2  2  3  2  1 NA  2 NA  1 NA NA  2  1  1 NA  3 NA  1  2\n [217]  2  1  3  2  2  1  1  2  3  1  1  1  4  3  4  2  2  1  4  1 NA  5  1  4\n [241] NA  3 NA NA  1  1  5  2  3  3  2  4 NA  3  2  5 NA  2  3  4  6  2  2  2\n [265] NA  2 NA  2 NA  3  3  2  2  4  3  1  4  2 NA  2  4 NA  6  2  3  1 NA  2\n [289]  2 NA  1  1  3  2  3  3  1 NA  1  4  2  1  1  3  2  1  2  3  1 NA  2  3\n [313]  3  2  1  2  3  5  5  1  2  3  3  1 NA NA  1  2  4 NA  2  1  1  1  3  2\n [337]  1  1  3  4 NA  1  2  1  1  3  3 NA  1  1  3  5  3  2  3  4  1  4  3  1\n [361] NA  2  1  2  2  1  2  2  6  1  2  4  5 NA  3  4  2  1  1  4  2  1  1  1\n [385]  1  2  1  4  4  1  3 NA  3  3 NA  2 NA  1  2  1  1  4  2  1  4  4 NA  1\n [409]  2 NA  3  2  2  2  1  4  3  6  1  2  3  1  3  2  2  2  1  1  3  2  1  1\n [433]  1  3  2  2 NA  4  4  4  1  1 NA  4  3 NA  1  3  1  3  2  4  2  2  2  3\n [457]  2  1  4  3 NA  1  4  3  1  3  2 NA  3 NA  1  3  1  4  1  1  1  2  4  3\n [481]  1  2  2  2  3  2  3  1  1 NA  3  2  1  1  2 NA  2  2  2  3  3  1  1  2\n [505] NA  1  2  1  1  3  3  1  3  1  1  1  1  1  2  5  1  1  2  2  1  1 NA  1\n [529]  4  1  2  4  1  3  2 NA  1  1 NA  2  1  1  4  2  3  3  1  5  3  1  1  2\n [553] NA  1  1  3  1  3  2  4 NA  2  3  2  1  2  1  1  1  2  2  3  1  5  2 NA\n [577]  2 NA  3  2  2  2  1  5  3  2  3  1 NA  3  1  2  2  2  1  2  2  4 NA  6\n [601]  1  2 NA  1  1  2  2  3 NA  3  2  3  3  4  2 NA  2 NA  4 NA  1  1  2  2\n [625]  3  1  1  1  3 NA  2  5 NA  7  1 NA  4  3  3  1 NA  1  1  1  1  3  2  4\n [649]  2  2  3 NA NA  1  4  3  2  2  2  3  2  4  2  2  4 NA NA NA  6  3  3  1\n [673]  4  4  2  1 NA  1  6 NA  3  3  2  1  1  6 NA  1  5  1 NA  2  6  2 NA  4\n [697]  1  3  1  2 NA  1  1  3  1  2  4  2  1  3  2  4  3  2  2  1  1  5  6  4\n [721]  2  2  2  2  4 NA  1  2  2  2  2  4  5 NA NA NA  4  3  3  3  2  4  2  4\n [745] NA NA NA NA  2  1 NA  2  4  3  2 NA  2  3  1  3  4 NA  1  2  1  2 NA  3\n [769]  1  2  1  2  1  2  1  2  2  2  2  1  1  3  3  1  3  4  3 NA NA  4  2  3\n [793]  2  1  3  2  4  2  2  3  1  2  4  3  3  4 NA  1  4  2  1  1  1  3  1  5\n [817]  2  2  4  2 NA  1  3  1  2 NA  1  2  1  2  1 NA  1  3  2  3  2 NA  2  1\n [841]  4  2 NA NA NA  2  4  2 NA NA  3  1 NA  5  5  2  2  2 NA  2  1  3  1  3\n [865]  2  4  2  4 NA  4  1  2  3  2  3  3  2  3  2  2  2  1  3  2  4  2 NA  3\n [889]  3  2  2 NA NA  3  2  1  2  4  1  1  1  1  4  3  2 NA  3  2 NA  1 NA  3\n [913]  2  1  1  1  2 NA  2  2  3  3  2 NA NA  4  5  2  2  2  1  2  3  1  3  3\n [937]  4  3 NA  1  1  1 NA  4  3  5  1  1  2 NA  2  2  2  2  5  2  2  3  1  2\n [961]  3 NA  1  2 NA NA  2 NA  3  1  1  2  5  3  5  1  1  4 NA  2  1  3  1  1\n [985]  2  4  3  3  3 NA  1  1  2  2  1  1  2  2 NA  2\n\n\n\nhow many? where?\n\nna_count &lt;- sum(is.na(na_example))\ncat(\"Number of total NA:\", na_count, \"\\n\")\n\nNumber of total NA: 145 \n\nna_indices &lt;- which(is.na(na_example))\ncat(\"Indices of NA values:\", na_indices, \"\\n\")\n\nIndices of NA valuesn\n\n\n\nmean and std calculations except NA values\n\ndata(\"na_example\")\nmean_original &lt;- mean(na_example, na.rm = TRUE)\nsd_original &lt;- sd(na_example, na.rm = TRUE)\n\ncat(\"Data except NA's - Mean:\", mean_original, \"\\n\")\n\nData except NA's - Mean: 2.301754 \n\ncat(\"Data except NA's - Standard Deviation:\", sd_original, \"\\n\")\n\nData except NA's - Standard Deviation: 1.22338 \n\n\n\n\nhandling missing values, version 1, replacing with median\n\ndata(\"na_example\")\nmedian_value &lt;- median(na_example, na.rm = TRUE)\nna_median_filled &lt;- ifelse(is.na(na_example), median_value, na_example)\n\nmean_median &lt;- mean(na_median_filled)\nsd_median &lt;- sd(na_median_filled)\n\ncat(\"data of replaced with median --- mean:\", mean_median, \"\\n\")\n\ndata of replaced with median --- mean: 2.258 \n\ncat(\"data of replaced with median --- std:\", sd_median, \"\\n\")\n\ndata of replaced with median --- std: 1.136102 \n\n\n\n\nhandling missing values, version 2, replacing with random values\n\ndata(\"na_example\")\nna_fixed_filled &lt;- ifelse(is.na(na_example), 5, na_example)\n\nmean_fixed &lt;- mean(na_fixed_filled)\nsd_fixed &lt;- sd(na_fixed_filled)\n\ncat(\"data of replaced with fixed value (5) --- mean:\", mean_fixed, \"\\n\")\n\ndata of replaced with fixed value (5) --- mean: 2.693 \n\ncat(\"data of replaced with fixed value (5) --- std:\", sd_fixed, \"\\n\")\n\ndata of replaced with fixed value (5) --- std: 1.477476 \n\n\n\n\ncomparing results\n\ncomparison_df &lt;- data.frame(\n  Dataset = c(\"Original\", \"Median Filled\", \"Fixed Value (5)\"),\n  Mean = c(mean_original, mean_median, mean_fixed),\n  StD = c(sd_original, sd_median, sd_fixed)\n)\n\nlibrary(knitr)\nkable(comparison_df, caption = \"Comparison of Different NA Handling Methods\")\n\n\nComparison of Different NA Handling Methods\n\n\nDataset\nMean\nStD\n\n\n\n\nOriginal\n2.301754\n1.223380\n\n\nMedian Filled\n2.258000\n1.136102\n\n\nFixed Value (5)\n2.693000\n1.477475\n\n\n\n\n\n\n\nwhich method should be used? and why?\nFilling missing values with the median is generally a more reliable method because it is not affected by extreme outliers and better preserves the overall structure of the data.\nOn the other hand, filling with a randomly selected value may work better in certain scenarios, such as large-scale datasets, but it carries the risk of distorting the natural distribution of the data."
  },
  {
    "objectID": "project.html",
    "href": "project.html",
    "title": "Trafik Kaza Analizi",
    "section": "",
    "text": "Projenin amacı, elimizde bulunan veri setleri yardımıyla 2005–2010 yılları arasında Birleşik Krallık’ta meydana gelen trafik kazalarına yönelik kapsamlı bir analiz gerçekleştirmektir.\n\nÇalışmada; kazaların tarihleri, meydana geldikleri bölgeler, hava koşulları ve kazaya karışan araç bilgileri gibi değişkenler dikkate alınarak kazaların dağılımı ve olası risk faktörleri analiz edilecektir.\n\nElde edilen bulgular doğrultusunda trafik güvenliğini artırmaya yönelik çıkarımlar yapılması hedeflenmektedir."
  },
  {
    "objectID": "project.html#veri-kaynağı",
    "href": "project.html#veri-kaynağı",
    "title": "Trafik Kaza Analizi",
    "section": "2.1 Veri kaynağı",
    "text": "2.1 Veri kaynağı\nVeriler, Kaggle platformunda yayımlanan aşağıdaki veri setinden elde edilmiştir:\nhttps://www.kaggle.com/datasets/tsiaras/uk-road-safety-accidents-and-vehicles/data\nİstersen burada her veri setini ayrı ayrı biraz daha açıklayıp şöyle de genişletebiliriz:\n\nAccident Information: Kazaların meydana geldiği tarih, saat, hava durumu, yol tipi, kaza şiddeti gibi bilgiler içerir.\nVehicle Information: Kazaya karışan araçların tipi, manevra şekli, araç özellikleri gibi bilgileri içerir."
  },
  {
    "objectID": "project.html#veri-üzerine-genel-bilgi",
    "href": "project.html#veri-üzerine-genel-bilgi",
    "title": "Trafik Kaza Analizi",
    "section": "2.2 Veri üzerine genel bilgi",
    "text": "2.2 Veri üzerine genel bilgi\nBu projede analiz için kullanılan veri setleri şunlardır:\n\nTrafik kazalarına ilişkin bilgiler (2005–2010 dönemi)\nKazaya karışan araçlara ilişkin bilgiler (2005–2010 dönemi)\n\nVeri setlerinde; kaza tarihleri, hava koşulları, kaza yerleri, kazaya karışan araçların türleri ve bazı diğer çevresel faktörler bulunmaktadır.\nBu veriler aracılığıyla, kaza yoğunluklarının zamana, mekâna ve şartlara göre dağılımı incelenecek ve önemli bulgular elde edilmeye çalışılacaktır."
  },
  {
    "objectID": "project.html#bu-veriyi-neden-seçtik",
    "href": "project.html#bu-veriyi-neden-seçtik",
    "title": "Trafik Kaza Analizi",
    "section": "2.2 Bu veriyi neden seçtik?",
    "text": "2.2 Bu veriyi neden seçtik?\nTrafik kazaları, toplum sağlığı ve güvenliği açısından önemli bir sorun teşkil etmektedir.\nBu projede, 2005–2010 yılları arasındaki trafik kazalarını analiz ederek, kazaların zamana, mekâna ve çevresel faktörlere göre nasıl dağıldığını incelemeyi amaçlıyoruz.\nKazaların yoğunlaştığı dönemleri, kazaya etki eden hava koşulları ve araç tipleri gibi unsurları tespit ederek, olası risk faktörlerini belirlemeye çalışacağız.\nBulguların, gelecekte alınabilecek önlemlere ve politika geliştirme süreçlerine katkı sağlaması hedeflenmektedir."
  },
  {
    "objectID": "project.html#preprocessing",
    "href": "project.html#preprocessing",
    "title": "Trafik Kaza Analizi",
    "section": "2.4 Preprocessing",
    "text": "2.4 Preprocessing\n\n2.4.1 Accident Information Verisi\n\nlibrary(dplyr)\naccident_data &lt;- accident_data %&gt;%\n  janitor::clean_names() %&gt;%\n  mutate(\n    date = as.Date(as.character(date), format = \"%d.%m.%Y\"),\n    hour = as.numeric(substr(time, 1, 2)),\n    year = year(date),\n    across(\n      c(junction_control, junction_detail, carriageway_hazards),\n      ~na_if(., \"Data missing or out of range\")\n    ),\n    across(\n      c(accident_severity, weather_conditions, light_conditions,\n        road_surface_conditions, urban_or_rural_area),\n      as.factor\n    ),\n    number_of_casualties = as.numeric(number_of_casualties),\n    number_of_vehicles = as.numeric(number_of_vehicles),\n    speed_limit = as.numeric(speed_limit)\n  )\n\nglimpse(accident_data)\n\nRows: 1,048,575\nColumns: 35\n$ accident_index                              &lt;chr&gt; \"200501BS00001\", \"200501BS…\n$ x1st_road_class                             &lt;chr&gt; \"A\", \"B\", \"C\", \"A\", \"Uncla…\n$ x1st_road_number                            &lt;dbl&gt; 3218, 450, 0, 3220, 0, 0, …\n$ x2nd_road_class                             &lt;chr&gt; NA, \"C\", NA, NA, NA, NA, \"…\n$ x2nd_road_number                            &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 30…\n$ accident_severity                           &lt;fct&gt; Serious, Slight, Slight, S…\n$ carriageway_hazards                         &lt;chr&gt; \"None\", \"None\", \"None\", \"N…\n$ date                                        &lt;date&gt; 2005-01-04, 2005-01-05, 2…\n$ day_of_week                                 &lt;chr&gt; \"Tuesday\", \"Wednesday\", \"T…\n$ did_police_officer_attend_scene_of_accident &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ junction_control                            &lt;chr&gt; NA, \"Auto traffic signal\",…\n$ junction_detail                             &lt;chr&gt; \"Not at junction or within…\n$ latitude                                    &lt;dbl&gt; 51.48910, 51.52007, 51.525…\n$ light_conditions                            &lt;fct&gt; Daylight, Darkness - light…\n$ local_authority_district                    &lt;chr&gt; \"Kensington and Chelsea\", …\n$ local_authority_highway                     &lt;chr&gt; \"Kensington and Chelsea\", …\n$ location_easting_osgr                       &lt;dbl&gt; 525680, 524170, 524520, 52…\n$ location_northing_osgr                      &lt;dbl&gt; 178240, 181650, 182240, 17…\n$ longitude                                   &lt;dbl&gt; -0.191170, -0.211708, -0.2…\n$ lsoa_of_accident_location                   &lt;chr&gt; \"E01002849\", \"E01002909\", …\n$ number_of_casualties                        &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 2, 2,…\n$ number_of_vehicles                          &lt;dbl&gt; 1, 1, 2, 1, 1, 2, 2, 1, 2,…\n$ pedestrian_crossing_human_control           &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ pedestrian_crossing_physical_facilities     &lt;dbl&gt; 1, 5, 0, 0, 0, 0, 0, 0, 5,…\n$ police_force                                &lt;chr&gt; \"Metropolitan Police\", \"Me…\n$ road_surface_conditions                     &lt;fct&gt; Wet or damp, Dry, Dry, Dry…\n$ road_type                                   &lt;chr&gt; \"Single carriageway\", \"Dua…\n$ special_conditions_at_site                  &lt;chr&gt; \"None\", \"None\", \"None\", \"N…\n$ speed_limit                                 &lt;dbl&gt; 30, 30, 30, 30, 30, 30, 30…\n$ time                                        &lt;time&gt; 17:42:00, 17:36:00, 00:15…\n$ urban_or_rural_area                         &lt;fct&gt; Urban, Urban, Urban, Urban…\n$ weather_conditions                          &lt;fct&gt; Raining no high winds, Fin…\n$ year                                        &lt;dbl&gt; 2005, 2005, 2005, 2005, 20…\n$ in_scotland                                 &lt;chr&gt; \"No\", \"No\", \"No\", \"No\", \"N…\n$ hour                                        &lt;dbl&gt; 17, 17, 0, 10, 21, 12, 20,…\n\n\n\n\n2.4.2 Vehicle Information Verisi\n\nlibrary(dplyr)\nvehicle_data &lt;- vehicle_data %&gt;%\n  janitor::clean_names() %&gt;%\n  mutate(across(\n    where(is.character),\n    ~na_if(., \"Data missing or out of range\")\n  )) %&gt;%\n  mutate(across(\n    where(is.character),\n    ~na_if(., \"None\")\n  )) %&gt;%\n  mutate(\n    age_of_vehicle = as.numeric(age_of_vehicle),\n    engine_capacity_cc = as.numeric(engine_capacity_cc),\n    across(\n      c(vehicle_type, vehicle_manoeuvre, propulsion_code, sex_of_driver),\n      as.factor\n    )\n  )\nglimpse(vehicle_data)\n\nRows: 2,177,205\nColumns: 24\n$ accident_index                   &lt;chr&gt; \"200401BS00001\", \"200401BS00002\", \"20…\n$ age_band_of_driver               &lt;chr&gt; \"26 - 35\", \"26 - 35\", \"26 - 35\", \"66 …\n$ age_of_vehicle                   &lt;dbl&gt; 3, NA, 4, NA, 1, 10, NA, NA, 3, 4, 3,…\n$ driver_home_area_type            &lt;chr&gt; \"Urban area\", \"Urban area\", NA, NA, \"…\n$ driver_imd_decile                &lt;dbl&gt; 4, 3, NA, NA, 4, NA, 4, 8, NA, 6, 8, …\n$ engine_capacity_cc               &lt;dbl&gt; 1588, NA, 998, NA, 124, 1781, NA, NA,…\n$ hit_object_in_carriageway        &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ hit_object_off_carriageway       &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ journey_purpose_of_driver        &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ junction_location                &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ make                             &lt;chr&gt; \"ROVER\", \"BMW\", \"NISSAN\", \"LONDON TAX…\n$ model                            &lt;chr&gt; \"45 CLASSIC 16V\", \"C1\", \"MICRA CELEBR…\n$ propulsion_code                  &lt;fct&gt; Petrol, NA, Petrol, NA, Petrol, Petro…\n$ sex_of_driver                    &lt;fct&gt; Male, Male, Male, Male, Male, Male, M…\n$ skidding_and_overturning         &lt;chr&gt; NA, NA, NA, NA, NA, NA, \"Skidded\", NA…\n$ towing_and_articulation          &lt;chr&gt; \"No tow/articulation\", \"No tow/articu…\n$ vehicle_leaving_carriageway      &lt;chr&gt; \"Did not leave carriageway\", \"Did not…\n$ vehicle_location_restricted_lane &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ vehicle_manoeuvre                &lt;fct&gt; Going ahead other, Going ahead other,…\n$ vehicle_reference                &lt;dbl&gt; 2, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2, 1…\n$ vehicle_type                     &lt;fct&gt; 109, 109, 109, 109, Motorcycle 125cc …\n$ was_vehicle_left_hand_drive      &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, N…\n$ x1st_point_of_impact             &lt;chr&gt; \"Front\", \"Front\", \"Front\", \"Front\", \"…\n$ year                             &lt;dbl&gt; 2004, 2004, 2004, 2004, 2004, 2004, 2…\n\n\n\n\n2.4.3 Birleştirelim!\n\nfull_data &lt;- left_join(vehicle_data, accident_data, by = \"accident_index\")\nglimpse(full_data)\n\nRows: 2,177,205\nColumns: 58\n$ accident_index                              &lt;chr&gt; \"200401BS00001\", \"200401BS…\n$ age_band_of_driver                          &lt;chr&gt; \"26 - 35\", \"26 - 35\", \"26 …\n$ age_of_vehicle                              &lt;dbl&gt; 3, NA, 4, NA, 1, 10, NA, N…\n$ driver_home_area_type                       &lt;chr&gt; \"Urban area\", \"Urban area\"…\n$ driver_imd_decile                           &lt;dbl&gt; 4, 3, NA, NA, 4, NA, 4, 8,…\n$ engine_capacity_cc                          &lt;dbl&gt; 1588, NA, 998, NA, 124, 17…\n$ hit_object_in_carriageway                   &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA…\n$ hit_object_off_carriageway                  &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA…\n$ journey_purpose_of_driver                   &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA…\n$ junction_location                           &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA…\n$ make                                        &lt;chr&gt; \"ROVER\", \"BMW\", \"NISSAN\", …\n$ model                                       &lt;chr&gt; \"45 CLASSIC 16V\", \"C1\", \"M…\n$ propulsion_code                             &lt;fct&gt; Petrol, NA, Petrol, NA, Pe…\n$ sex_of_driver                               &lt;fct&gt; Male, Male, Male, Male, Ma…\n$ skidding_and_overturning                    &lt;chr&gt; NA, NA, NA, NA, NA, NA, \"S…\n$ towing_and_articulation                     &lt;chr&gt; \"No tow/articulation\", \"No…\n$ vehicle_leaving_carriageway                 &lt;chr&gt; \"Did not leave carriageway…\n$ vehicle_location_restricted_lane            &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ vehicle_manoeuvre                           &lt;fct&gt; Going ahead other, Going a…\n$ vehicle_reference                           &lt;dbl&gt; 2, 1, 1, 2, 1, 2, 1, 1, 1,…\n$ vehicle_type                                &lt;fct&gt; 109, 109, 109, 109, Motorc…\n$ was_vehicle_left_hand_drive                 &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA…\n$ x1st_point_of_impact                        &lt;chr&gt; \"Front\", \"Front\", \"Front\",…\n$ year.x                                      &lt;dbl&gt; 2004, 2004, 2004, 2004, 20…\n$ x1st_road_class                             &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA…\n$ x1st_road_number                            &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA…\n$ x2nd_road_class                             &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA…\n$ x2nd_road_number                            &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA…\n$ accident_severity                           &lt;fct&gt; NA, NA, NA, NA, NA, NA, NA…\n$ carriageway_hazards                         &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA…\n$ date                                        &lt;date&gt; NA, NA, NA, NA, NA, NA, N…\n$ day_of_week                                 &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA…\n$ did_police_officer_attend_scene_of_accident &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA…\n$ junction_control                            &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA…\n$ junction_detail                             &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA…\n$ latitude                                    &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA…\n$ light_conditions                            &lt;fct&gt; NA, NA, NA, NA, NA, NA, NA…\n$ local_authority_district                    &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA…\n$ local_authority_highway                     &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA…\n$ location_easting_osgr                       &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA…\n$ location_northing_osgr                      &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA…\n$ longitude                                   &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA…\n$ lsoa_of_accident_location                   &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA…\n$ number_of_casualties                        &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA…\n$ number_of_vehicles                          &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA…\n$ pedestrian_crossing_human_control           &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA…\n$ pedestrian_crossing_physical_facilities     &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA…\n$ police_force                                &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA…\n$ road_surface_conditions                     &lt;fct&gt; NA, NA, NA, NA, NA, NA, NA…\n$ road_type                                   &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA…\n$ special_conditions_at_site                  &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA…\n$ speed_limit                                 &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA…\n$ time                                        &lt;time&gt; NA, NA, NA, NA, NA, NA, N…\n$ urban_or_rural_area                         &lt;fct&gt; NA, NA, NA, NA, NA, NA, NA…\n$ weather_conditions                          &lt;fct&gt; NA, NA, NA, NA, NA, NA, NA…\n$ year.y                                      &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA…\n$ in_scotland                                 &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA…\n$ hour                                        &lt;dbl&gt; NA, NA, NA, NA, NA, NA, NA…\n\nsummary(full_data$date)\n\n        Min.      1st Qu.       Median         Mean      3rd Qu.         Max. \n\"2005-01-01\" \"2006-10-30\" \"2008-07-04\" \"2008-04-20\" \"2009-10-26\" \"2010-12-31\" \n        NA's \n   \"1648419\" \n\nn_distinct(full_data$accident_index)\n\n[1] 1488981\n\nsummary(accident_data$date)\n\n        Min.      1st Qu.       Median         Mean      3rd Qu.         Max. \n\"2005-01-01\" \"2006-05-12\" \"2007-10-03\" \"2007-11-02\" \"2009-04-21\" \"2010-12-31\" \n\n\n\nsummary(accident_data$date)\n\n        Min.      1st Qu.       Median         Mean      3rd Qu.         Max. \n\"2005-01-01\" \"2006-05-12\" \"2007-10-03\" \"2007-11-02\" \"2009-04-21\" \"2010-12-31\""
  },
  {
    "objectID": "project.html#exploratory-data-analysis",
    "href": "project.html#exploratory-data-analysis",
    "title": "Trafik Kaza Analizi",
    "section": "3.1 Exploratory Data Analysis",
    "text": "3.1 Exploratory Data Analysis\nxxxxxx"
  },
  {
    "objectID": "project.html#trend-analysis",
    "href": "project.html#trend-analysis",
    "title": "Trafik Kaza Analizi",
    "section": "3.2 Trend Analysis",
    "text": "3.2 Trend Analysis\nxxxxxx"
  },
  {
    "objectID": "project.html#model-fitting",
    "href": "project.html#model-fitting",
    "title": "Trafik Kaza Analizi",
    "section": "3.3 Model Fitting",
    "text": "3.3 Model Fitting\nxxxxxx"
  },
  {
    "objectID": "project.html#results",
    "href": "project.html#results",
    "title": "Trafik Kaza Analizi",
    "section": "3.4 Results",
    "text": "3.4 Results\nxxxxxx"
  },
  {
    "objectID": "project.html#veri-kaynadd1",
    "href": "project.html#veri-kaynadd1",
    "title": "Trafik Kaza Analizi",
    "section": "2.1 Veri kaynaD\u001fD1",
    "text": "2.1 Veri kaynaD\u001fD1\nVeriler, Kaggle platformunda yayD1mlanan aE\u001faD\u001fD1daki veri setinden elde edilmiE\u001ftir:\nhttps://www.kaggle.com/datasets/tsiaras/uk-road-safety-accidents-and-vehicles/data\nD0stersen burada her veri setini ayrD1 ayrD1 biraz daha aC’D1klayD1p E\u001fC6yle de geniE\u001fletebiliriz:\n\nAccident Information: KazalarD1n meydana geldiD\u001fi tarih, saat, hava durumu, yol tipi, kaza E\u001fiddeti gibi bilgiler iC’erir.\nVehicle Information: Kazaya karD1E\u001fan araC’larD1n tipi, manevra E\u001fekli, araC’ C6zellikleri gibi bilgileri iC’erir."
  },
  {
    "objectID": "project.html#veri-czerine-genel-bilgi",
    "href": "project.html#veri-czerine-genel-bilgi",
    "title": "Trafik Kaza Analizi",
    "section": "2.2 Veri C<zerine genel bilgi",
    "text": "2.2 Veri C&lt;zerine genel bilgi\nBu projede analiz iC’in kullanD1lan veri setleri E\u001funlardD1r:\n\nTrafik kazalarD1na iliE\u001fkin bilgiler (2005–2010 dC6nemi)\nKazaya karD1E\u001fan araC’lara iliE\u001fkin bilgiler (2005–2010 dC6nemi)\n\nVeri setlerinde; kaza tarihleri, hava koE\u001fullarD1, kaza yerleri, kazaya karD1E\u001fan araC’larD1n tC&lt;rleri ve bazD1 diD\u001fer C’evresel faktC6rler bulunmaktadD1r.\nBu veriler aracD1lD1D\u001fD1yla, kaza yoD\u001funluklarD1nD1n zamana, mekC”na ve E\u001fartlara gC6re daD\u001fD1lD1mD1 incelenecek ve C6nemli bulgular elde edilmeye C’alD1E\u001fD1lacaktD1r."
  },
  {
    "objectID": "project.html#bu-veriyi-neden-sectik",
    "href": "project.html#bu-veriyi-neden-sectik",
    "title": "Trafik Kaza Analizi",
    "section": "2.3 Bu veriyi neden seC’tik?",
    "text": "2.3 Bu veriyi neden seC’tik?\nTrafik kazalarD1, toplum saD\u001flD1D\u001fD1 ve gC&lt;venliD\u001fi aC’D1sD1ndan C6nemli bir sorun teE\u001fkil etmektedir.\nBu projede, 2005–2010 yD1llarD1 arasD1ndaki trafik kazalarD1nD1 analiz ederek, kazalarD1n zamana, mekC”na ve C’evresel faktC6rlere gC6re nasD1l daD\u001fD1ldD1D\u001fD1nD1 incelemeyi amaC’lD1yoruz.\nKazalarD1n yoD\u001funlaE\u001ftD1D\u001fD1 dC6nemleri, kazaya etki eden hava koE\u001fullarD1 ve araC’ tipleri gibi unsurlarD1 tespit ederek, olasD1 risk faktC6rlerini belirlemeye C’alD1E\u001facaD\u001fD1z.\nBulgularD1n, gelecekte alD1nabilecek C6nlemlere ve politika geliE\u001ftirme sC&lt;reC’lerine katkD1 saD\u001flamasD1 hedeflenmektedir."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome to My Analytics Lab",
    "section": "",
    "text": "Hello!! My name is Taha Karakaya.\nThis is my personal webpage.\nPlease stay tuned to follow my works on data analytics, blog posts, and more.\n\n\n\n Back to top"
  },
  {
    "objectID": "project.html#veri-kaynağı-ve-genel-bilgi",
    "href": "project.html#veri-kaynağı-ve-genel-bilgi",
    "title": "Trafik Kaza Analizi",
    "section": "2.1 Veri kaynağı ve genel bilgi",
    "text": "2.1 Veri kaynağı ve genel bilgi\nVeriler, Kaggle platformunda yayımlanan aşağıdaki veri setinden elde edilmiştir:\nhttps://www.kaggle.com/datasets/tsiaras/uk-road-safety-accidents-and-vehicles/data\nİstersen burada her veri setini ayrı ayrı biraz daha açıklayıp şöyle de genişletebiliriz:\n\nKaza Bilgisi: Kazaların meydana geldiği tarih, saat, hava durumu, yol tipi, kaza şiddeti gibi bilgiler içerir. 34–1048575\nAraç Bilgisi: Kazaya karışan araçların tipi, manevra şekli, araç özellikleri gibi bilgileri içerir. 24–1048575"
  },
  {
    "objectID": "project.html#veri-analizi",
    "href": "project.html#veri-analizi",
    "title": "Trafik Kaza Analizi",
    "section": "3.1 Veri Analizi",
    "text": "3.1 Veri Analizi\n\n3.1.1 Ön İşleme ve Veri Manipülasyonu\n\n3.1.1.1 Sütun İsimlerini Düzeltme\n\naccidents &lt;- accidents %&gt;% clean_names()\nvehicles &lt;- vehicles %&gt;% clean_names()\n\n\nnames(accidents)\n\n [1] \"accident_index\"                             \n [2] \"x1st_road_class\"                            \n [3] \"x1st_road_number\"                           \n [4] \"x2nd_road_class\"                            \n [5] \"x2nd_road_number\"                           \n [6] \"accident_severity\"                          \n [7] \"carriageway_hazards\"                        \n [8] \"date\"                                       \n [9] \"day_of_week\"                                \n[10] \"did_police_officer_attend_scene_of_accident\"\n[11] \"junction_control\"                           \n[12] \"junction_detail\"                            \n[13] \"latitude\"                                   \n[14] \"light_conditions\"                           \n[15] \"local_authority_district\"                   \n[16] \"local_authority_highway\"                    \n[17] \"location_easting_osgr\"                      \n[18] \"location_northing_osgr\"                     \n[19] \"longitude\"                                  \n[20] \"lsoa_of_accident_location\"                  \n[21] \"number_of_casualties\"                       \n[22] \"number_of_vehicles\"                         \n[23] \"pedestrian_crossing_human_control\"          \n[24] \"pedestrian_crossing_physical_facilities\"    \n[25] \"police_force\"                               \n[26] \"road_surface_conditions\"                    \n[27] \"road_type\"                                  \n[28] \"special_conditions_at_site\"                 \n[29] \"speed_limit\"                                \n[30] \"time\"                                       \n[31] \"urban_or_rural_area\"                        \n[32] \"weather_conditions\"                         \n[33] \"year\"                                       \n[34] \"in_scotland\"                                \n\n\n\n\n3.1.1.2 NA Değerlerini İnceleme ve Temizleme\n\n#iki veride de yüzdesel olarak NA değerlerini görebileceğimiz fonksiyon\n#ek olarak bazı değerler NA olmayıp \"Not known\" vs. \nna_summary &lt;- function(df) {\n  df %&gt;%\n    summarise(across(\n      everything(),\n      ~ sum(is.na(.) |\n              . %in% c(\"Data missing or out of range\", \"Unallocated\", \"None\", \"NA\", \"Not known\",\"Unknown\", \"Other vehicle\",\"Other\"))\n    )) %&gt;%\n    pivot_longer(everything(), names_to = \"column\", values_to = \"na_count\") %&gt;%\n    mutate(\n      total_rows = nrow(df),\n      na_percent = round((na_count / total_rows) * 100, 2)\n    ) %&gt;%\n    arrange(desc(na_percent))\n}\n\naccident_na_summary &lt;- na_summary(accidents)\nvehicle_na_summary  &lt;- na_summary(vehicles)\n\n\naccident_na_summary\n\n# A tibble: 34 × 4\n   column                                      na_count total_rows na_percent\n   &lt;chr&gt;                                          &lt;int&gt;      &lt;int&gt;      &lt;dbl&gt;\n 1 carriageway_hazards                          1028863    1048575      98.1 \n 2 special_conditions_at_site                   1021551    1048575      97.4 \n 3 x2nd_road_class                               439824    1048575      41.9 \n 4 junction_control                              353871    1048575      33.8 \n 5 lsoa_of_accident_location                      71890    1048575       6.86\n 6 weather_conditions                             47878    1048575       4.57\n 7 x2nd_road_number                               10803    1048575       1.03\n 8 road_type                                       7266    1048575       0.69\n 9 road_surface_conditions                         1189    1048575       0.11\n10 did_police_officer_attend_scene_of_accident      269    1048575       0.03\n# ℹ 24 more rows\n\n\n\nvehicle_na_summary\n\n# A tibble: 24 × 4\n   column                     na_count total_rows na_percent\n   &lt;chr&gt;                         &lt;int&gt;      &lt;int&gt;      &lt;dbl&gt;\n 1 hit_object_in_carriageway   2089126    2177205      96.0 \n 2 hit_object_off_carriageway  1990274    2177205      91.4 \n 3 skidding_and_overturning    1899223    2177205      87.2 \n 4 journey_purpose_of_driver   1001151    2177205      46.0 \n 5 driver_imd_decile            734812    2177205      33.8 \n 6 age_of_vehicle               358149    2177205      16.4 \n 7 driver_home_area_type        334344    2177205      15.4 \n 8 engine_capacity_cc           265861    2177205      12.2 \n 9 propulsion_code              245843    2177205      11.3 \n10 model                        214486    2177205       9.85\n# ℹ 14 more rows\n\n\n\n#sadece kullanacağımız sütunları seçelim, (NA olsun veya olmasın) &lt;görüntü kirliliği&gt;\naccidents &lt;- accidents %&gt;%\n  select(accident_index, time, accident_severity, longitude, latitude,\n         number_of_casualties, number_of_vehicles, day_of_week, date,\n         weather_conditions, road_surface_conditions, speed_limit, urban_or_rural_area, light_conditions)\n\nvehicles &lt;- vehicles %&gt;%\n  select(accident_index, engine_capacity_cc, vehicle_manoeuvre, vehicle_type,\n         make, driver_imd_decile, age_band_of_driver, age_of_vehicle)\n\n\n#bazı araçların kaza kaydı mevcut değil, bazı kazaların araç kaydı mevcut değil. Bu sebeple inner join kullanarak her ikisinde olanı da görmek istiyoruz.\ncombined &lt;- inner_join(vehicles, accidents, by = \"accident_index\")\n\n\n#Anlamlı olmayan verileri NA olarak işliyoruz.\nna_like &lt;- c(\"Unallocated\", \"None\", \"NA\", \"Not known\", \"Data missing or out of range\", \"Other vehicle\",\"Unknown\",\"Other\")\n\ncombined &lt;- combined %&gt;%\n  mutate(across(\n    everything(),\n    ~ ifelse(. %in% na_like, NA, .)\n  ))\n\n#motor gücü 50cc'den az olanları çıkartıyoruz.\ncombined &lt;- combined %&gt;%\n  mutate(engine_capacity_cc = as.numeric(engine_capacity_cc)) %&gt;% \n  filter(engine_capacity_cc &gt;= 50 | is.na(engine_capacity_cc))\n\n\ncombined_na_summary &lt;- na_summary(combined)\ncombined_na_summary\n\n# A tibble: 21 × 4\n   column                  na_count total_rows na_percent\n   &lt;chr&gt;                      &lt;int&gt;      &lt;int&gt;      &lt;dbl&gt;\n 1 driver_imd_decile         115404     523806      22.0 \n 2 age_of_vehicle             69068     523806      13.2 \n 3 engine_capacity_cc         45277     523806       8.64\n 4 age_band_of_driver         41244     523806       7.87\n 5 weather_conditions         22280     523806       4.25\n 6 vehicle_type                3796     523806       0.72\n 7 road_surface_conditions      718     523806       0.14\n 8 vehicle_manoeuvre            154     523806       0.03\n 9 urban_or_rural_area           37     523806       0.01\n10 accident_index                 0     523806       0   \n# ℹ 11 more rows\n\n\n\n#driver_imd_decile sütunu:Index of Multiple Deprivation (sürücünün yaşadığı bölgenin sosyo-ekonomik durumu)\n#bu sebeple bu veriyi kaybetmek istemiyoruz. NA değerlerini dağılımı bozmaması açısından kendi dağılımına göre örnek veriyle dolduracağız. Bu ve diğer yüzde 5 NA içerenleri dağılımı bozmamak adına örnek veriyle dolduruyoruz.\n\nset.seed(660)\n\n# Fonksiyon: NA'ları orijinal dağılıma göre doldur\nimpute_column &lt;- function(column) {\n  if (!is.numeric(column) && !is.character(column) && !is.factor(column)) {\n    return(column)  # işlem yapma\n  }\n  non_na_values &lt;- column[!is.na(column)]\n  na_count &lt;- sum(is.na(column))\n  if (length(non_na_values) == 0 || na_count == 0) {\n    return(column)  # işlem gerekmez\n  }\n  imputed_values &lt;- sample(non_na_values, na_count, replace = TRUE)\n  column[is.na(column)] &lt;- imputed_values\n  return(column)\n}\n\n# 1. NA oranlarını hesapla\nna_summary &lt;- combined %&gt;%\n  summarise(across(everything(), ~mean(is.na(.)))) %&gt;%\n  pivot_longer(everything(), names_to = \"column\", values_to = \"na_ratio\")\n\n# 2. %5'ten büyük olanları seç\ncols_to_impute &lt;- na_summary %&gt;%\n  filter(na_ratio &gt; 0.05) %&gt;%\n  pull(column)\n\n# 3. İlgili sütunları doldur\ncombined[cols_to_impute] &lt;- combined[cols_to_impute] %&gt;%\n  lapply(impute_column)\n\n\n#kalan yüzde 5'ten küçük orana sahip NA değerlerini siliyorum\ncombined &lt;- combined %&gt;%\n  drop_na()\n\n\nna_summary &lt;- function(df) {\n  df %&gt;%\n    summarise(across(\n      everything(),\n      ~ sum(is.na(.) |\n              . %in% c(\"Data missing or out of range\", \"Unallocated\", \"None\", \"NA\", \"Not known\", \"Other vehicle\", \"Unknown\",\"Other\"))\n    )) %&gt;%\n    pivot_longer(everything(), names_to = \"column\", values_to = \"na_count\") %&gt;%\n    mutate(\n      total_rows = nrow(df),\n      na_percent = round((na_count / total_rows) * 100, 2)\n    ) %&gt;%\n    arrange(desc(na_percent))\n}\nna_summary(combined)\n\n# A tibble: 21 × 4\n   column             na_count total_rows na_percent\n   &lt;chr&gt;                 &lt;int&gt;      &lt;int&gt;      &lt;dbl&gt;\n 1 accident_index            0     497673          0\n 2 engine_capacity_cc        0     497673          0\n 3 vehicle_manoeuvre         0     497673          0\n 4 vehicle_type              0     497673          0\n 5 make                      0     497673          0\n 6 driver_imd_decile         0     497673          0\n 7 age_band_of_driver        0     497673          0\n 8 age_of_vehicle            0     497673          0\n 9 time                      0     497673          0\n10 accident_severity         0     497673          0\n# ℹ 11 more rows\n\n\n\n\n3.1.1.3 Karakter Verilerinin Faktöre Dönüştürülmesi\n\n#okunabilirliğinin rahat olması adına hız limiti değerlerini mph'den km/saat'e çevirelim\n#1 mph ≈ 1.60934 km/h\ncombined &lt;- combined %&gt;%\n  mutate(speed_limit = round(speed_limit * 1.60934, 0))\n\n\n#Saat bazında trendi inceleyebilmek adına saat verisini kategorize ediyoruz.\ncombined &lt;- combined %&gt;%\n  mutate(\n    date = as.Date(date, format = \"%d.%m.%Y\"),\n    hour = as.numeric(substr(time, 1, 2)),\n    daytime = case_when(\n      hour &gt;= 5  & hour &lt; 10 ~ \"1\",  # Sabah Telaşı\n      hour &gt;= 10 & hour &lt; 15 ~ \"2\",  # Ofis Saatleri\n      hour &gt;= 15 & hour &lt; 19 ~ \"3\",  # İş Çıkışı\n      hour &gt;= 19 & hour &lt; 23 ~ \"4\",  # Akşam\n      TRUE ~ \"5\"                     # Gece\n    )\n  ) %&gt;%\n  select(-time, -hour)\n\n\ncombined$daytime &lt;- factor(combined$daytime,\n                           levels = c(\"1\", \"2\", \"3\", \"4\", \"5\"),\n                           labels = c(\"Sabah\", \"Ofis\", \"Cikis\", \"Aksam\", \"Gece\"))\n\n\n#sıralı olması gereken faktörleri ileride kuracağımız model için sıralı oalrak belirttik\ncombined &lt;- combined %&gt;%\n  mutate(\n    age_band_of_driver = factor(age_band_of_driver,\n                                levels = c(\"0 - 5\",\"6 - 10\", \"11 - 15\", \"16 - 20\", \"21 - 25\", \"26 - 35\", \"36 - 45\", \"46 - 55\", \"56 - 65\", \"66 - 75\"),\n                                ordered = TRUE),\n    driver_imd_decile = factor(driver_imd_decile, levels = 1:10, ordered = TRUE),\n    accident_severity = factor(accident_severity, levels = c(\"Slight\", \"Serious\", \"Fatal\"), ordered = TRUE),\n    day_of_week = factor(day_of_week,\n                         levels = c(\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"),\n                         ordered = TRUE)\n  )\n\n\n#karakter değerlerini de faktöre çevirelim\ncombined &lt;- combined %&gt;%\n  mutate(across(where(is.character), as.factor))\n\n\n\n3.1.2 Açıklayıcı Veri Analizi\n\n\n# A tibble: 3 × 3\n  `Kaza Şiddeti` `Kayıt Sayısı` `Yuzde (%)`\n  &lt;ord&gt;                   &lt;int&gt;       &lt;dbl&gt;\n1 Slight                 429897        86.4\n2 Serious                 60813        12.2\n3 Fatal                    6963         1.4\n\n\n\n\n\n\n\nSayısal Değişkenler Arası Korelasyon\n\n\n\n\n\n\n# A tibble: 7 × 3\n  Gunler    `Kayıt Sayısı` `Yuzde (%)`\n  &lt;ord&gt;              &lt;int&gt;       &lt;dbl&gt;\n1 Monday             71159        14.3\n2 Tuesday            75409        15.2\n3 Wednesday          76132        15.3\n4 Thursday           75199        15.1\n5 Friday             82570        16.6\n6 Saturday           65170        13.1\n7 Sunday             52034        10.5\n\n\n\n\n3.1.3 Veri Görselleştirme ve Trend Analizi\n\n\n\n\n\nSayısal Değişkenler Arası Korelasyon\n\n\n\n\n\n#saat dilimlerine göre kaza sayısı, gece saatlerinde ciddi bir farkla daha kaza meydana gelmektedir.\ncombined %&gt;%\n  count(daytime, accident_severity) %&gt;%\n  ggplot(aes(x = daytime, y = n, fill = accident_severity)) +\n  geom_col(position = \"dodge\") +\n  scale_y_log10() + # Logaritmik ölçek\n    scale_x_discrete(\n    labels = c(\n      \"1\" = \"Sabah\",\n      \"2\" = \"Ofis\",\n      \"3\" = \"Çıkış\",\n      \"4\" = \"Aksam\",\n      \"5\" = \"Gece\"\n    )\n  ) +\n    scale_fill_brewer(palette = \"Set2\") +\n    labs(\n    title = \"Saat Dilimine Göre Kaza Şiddeti Dağılımı (Log Ölçekli)\",\n    x = \"Saat Grubu\",\n    y = \"Kaza Sayısı (log10)\",\n    fill = \"Kaza Şiddeti\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n# A tibble: 5 × 3\n  `Isık Kosulları`            `Kayıt Sayısı` `Yuzde (%)`\n  &lt;fct&gt;                                &lt;int&gt;       &lt;dbl&gt;\n1 Daylight                            372442       77.0 \n2 Darkness - lights lit                89100       18.4 \n3 Darkness - no lighting               18463        3.82\n4 Darkness - lighting unknown           2020        0.42\n5 Darkness - lights unlit               1517        0.31\n\n\n\n#yol durumunun kaza sayısına etkisi. \nlibrary(forcats)\ncombined %&gt;%\n  count(road_surface_conditions, accident_severity) %&gt;%\n  ggplot(aes(y = fct_reorder(road_surface_conditions, n), x = n, fill = accident_severity)) +\n  geom_col(position = \"dodge\") +\n  scale_x_log10() +  # Logaritmik ölçek\n  scale_fill_brewer(palette = \"Set2\") + \n  labs(\n    title = \"Yol Durumuna Göre Kaza Şiddeti (Log Ölçekli)\",\n    x = \"Kaza Sayısı (log10)\",\n    y = \"Yol Durumu\",\n    fill = \"Kaza Şiddeti\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n#hava durumunun kaza sayısına etkisi\ncombined %&gt;%\n  count(weather_conditions, accident_severity) %&gt;%\n  ggplot(aes(y = fct_reorder(weather_conditions, n), x = n, fill = accident_severity)) +\n  geom_col(position = \"dodge\") +\n  scale_x_log10() +  # Logaritmik ölçek\n  scale_fill_brewer(palette = \"Set2\") + \n  labs(\n    title = \"Hava Koşullarına Göre Kaza Şiddeti (Log Ölçekli)\",\n    x = \"Kaza Sayısı (log10)\",\n    y = \"Hava Koşulu\",\n    fill = \"Kaza Şiddeti\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n#kaza anı manevrasına göre kaza sayıları, en çok kaza düz giderken gerçekleşmektedir. yani manevranın doğrudan bağlantısı yoktur.\nlibrary(forcats)\ncombined %&gt;%\n  count(vehicle_manoeuvre, sort = TRUE) %&gt;%\n  ggplot(aes(x = n, y = fct_reorder(vehicle_manoeuvre, n))) +\n  geom_col(fill = \"lightcoral\") +\n  labs(\n    title = \"Manevra Türüne Göre Kaza Sayısı\",\n    x = \"Kaza Sayısı\",\n    y = \"Araç Manevrası\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n#fatal kaza derecesinin Birleşik Krallık haritasında gösterimi \nlibrary(leaflet)\nmap_fatal &lt;- combined %&gt;%\n  filter(accident_severity == \"Fatal\") %&gt;%\n  filter(!is.na(latitude), !is.na(longitude)) %&gt;%\n  mutate(color = \"#ff6666\")  # pastel kırmızı\n\n# Leaflet haritası\nleaflet(map_fatal) %&gt;%\n  addTiles() %&gt;%\n  addCircleMarkers(\n    lng = ~longitude,\n    lat = ~latitude,\n    radius = 2,\n    color = ~color,\n    stroke = FALSE,\n    fillOpacity = 0.4,\n    popup = ~paste(\"Kaza Şiddeti:\", accident_severity)\n  ) %&gt;%\n  addLegend(\"bottomright\",\n            colors = \"#ff6666\",\n            labels = \"Fatal\",\n            title = \"Kaza Şiddeti\")\n\n\n\n\n\n\n#motorsiklet vs diğerleri\nlibrary(stringr)\ncombined_vehicle_grouped &lt;- combined %&gt;%\n  mutate(\n    vehicle_group = ifelse(str_detect(vehicle_type, regex(\"Motorcycle\", ignore_case = TRUE)),\n                           \"Motorsiklet\", \"Diger\")\n  )\n\n\n#yüzdesel kaza şiddeti karşılaştırılması\ndodge &lt;- position_dodge(width = 0.7)\n\ncombined_vehicle_grouped %&gt;%\n  count(vehicle_group, accident_severity) %&gt;%\n  group_by(vehicle_group) %&gt;%\n  mutate(percentage = round(n / sum(n) * 100, 2)) %&gt;%\n  ggplot(aes(x = accident_severity, y = percentage, fill = vehicle_group)) +\n  geom_col(position = dodge, width = 0.7) +\n  geom_text(\n    aes(label = paste0(percentage, \"%\")),\n    position = dodge,\n    vjust = -0.4,\n    size = 4\n  ) +\n  labs(\n    title = \"Arac Tipine Gore Kaza Şiddeti (Yuzde Dagılımı)\",\n    x = NULL,\n    y = NULL,\n    fill = \"Arac Grubu\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.ticks.y = element_blank(),\n    axis.text.y = element_blank(),\n    panel.grid = element_blank(),\n    plot.title = element_text(hjust = 0.5)\n  )\n\n\n\n\n\n#yüzdesel olarak motorsiklet kazalarını sosyoekonomik düzeyde inceledik.\nmotor_imd &lt;- combined_vehicle_grouped %&gt;%\n  group_by(vehicle_group, driver_imd_decile) %&gt;%\n  summarise(kaza_sayisi = n(), .groups = \"drop\") %&gt;%\n  mutate(percentage = round(kaza_sayisi / sum(kaza_sayisi) * 100, 2))\n\nggplot(motor_imd, aes(x = driver_imd_decile, y = percentage, fill = vehicle_group)) +\n  geom_col(position = \"dodge\") +\n  scale_fill_manual(\n    name = \"Arac Turu\",  # Legend başlığı\n    values = c(\"Motosiklet\" = \"#00BFC4\", \"Diğer\" = \"#F8766D\"),  # Renk eşlemesi\n    breaks = c(\"Motosiklet\", \"Diğer\"),  # Sıralama garantisi\n    labels = c(\"Motosiklet\", \"Diger Araclar\")  # Görünen isimler\n  ) +\n  labs(\n    title = \"IMD ve Arac Turune Gore Kaza Oranı\",\n    x = \"IMD Decile\",\n    y = \"Kaza Yuzdesi\"\n  ) +\n  theme_minimal()\n\n\n\n#bu da gösteriyor ki sosyoekonomik düzeyi yüksek kişilerin motorsiklet kazasına karışma ihtimali daha düşük."
  },
  {
    "objectID": "project.html#model",
    "href": "project.html#model",
    "title": "Trafik Kaza Analizi",
    "section": "3.3 Model",
    "text": "3.3 Model\n\n3.3.1 Multinomial Logistic Regression\n\nlibrary(nnet)\nlibrary(tidyselect)\nlibrary(dplyr)\n\n# Kategorik hale getir\ncombined$accident_severity &lt;- factor(combined$accident_severity)\n\n# Modelde kullanılacak değişkenler\nvars &lt;- c(\"vehicle_type\", \"vehicle_manoeuvre\", \n          \"speed_limit\", \"road_surface_conditions\", \"weather_conditions\", \n          \"age_of_vehicle\", \"engine_capacity_cc\", \"driver_imd_decile\")\n\nmodel_data &lt;- combined %&gt;%\n  select(all_of(vars), accident_severity) %&gt;%\n  na.omit()\n\n# Veri setini ayır\nset.seed(660)\nsample_index &lt;- sample(seq_len(nrow(model_data)), size = 0.7 * nrow(model_data))\ntrain_data &lt;- model_data[sample_index, ]\ntest_data  &lt;- model_data[-sample_index, ]\n\n# Modeli kur\nmodel &lt;- multinom(accident_severity ~ ., data = train_data)\n\n# weights:  165 (108 variable)\ninitial  value 382724.661616 \niter  10 value 158054.266867\niter  20 value 154097.239571\niter  30 value 150509.271484\niter  40 value 148960.188152\niter  50 value 148408.429241\niter  60 value 147169.415197\niter  70 value 146714.091759\niter  80 value 146475.181042\niter  90 value 146401.725329\niter 100 value 146350.136199\nfinal  value 146350.136199 \nstopped after 100 iterations\n\n# Tahmin\npredictions &lt;- predict(model, newdata = test_data)\n\n# predictions ve actual aynı seviyede faktör olmalı\npredictions &lt;- factor(predictions, levels = levels(train_data$accident_severity))\nactual &lt;- factor(test_data$accident_severity, levels = levels(train_data$accident_severity))\n\n# Confusion Matrix\nconf_matrix &lt;- table(Predicted = predictions, Actual = actual)\nprint(conf_matrix)\n\n         Actual\nPredicted Slight Serious  Fatal\n  Slight  128930   18281   2082\n  Serious      5       2      2\n  Fatal        0       0      0\n\n# Doğruluk oranı\naccuracy &lt;- mean(as.character(predictions) == as.character(actual))\ncat(\"Doğruluk Oranı:\", round(accuracy * 100, 2), \"%\\n\")\n\nDoğruluk Oranı: 86.36 %\n\n\n\ncommon_levels &lt;- levels(factor(c(predictions, actual)))\n\npredictions &lt;- factor(predictions, levels = common_levels, ordered = FALSE)\nactual      &lt;- factor(actual,      levels = common_levels, ordered = FALSE)\n\nconf_matrix &lt;- table(Predicted = predictions, Actual = actual)\nprint(conf_matrix)\n\n         Actual\nPredicted Slight Serious  Fatal\n  Slight  128930   18281   2082\n  Serious      5       2      2\n  Fatal        0       0      0\n\naccuracy &lt;- mean(predictions == actual)\ncat(\"Doğruluk Oranı:\", round(accuracy * 100, 2), \"%\\n\")\n\nDoğruluk Oranı: 86.36 %\n\n\n\n\n3.3.2 Random Forest\n\nlibrary(dplyr)\nlibrary(randomForest)\n\ncombined$accident_severity &lt;- as.factor(combined$accident_severity)\n\nmodel_data &lt;- combined %&gt;%\n  select(accident_severity, engine_capacity_cc, age_of_vehicle,\n         speed_limit, number_of_casualties, number_of_vehicles,\n         vehicle_type, vehicle_manoeuvre, road_surface_conditions,\n         weather_conditions, light_conditions, urban_or_rural_area)\n\nmodel_data &lt;- na.omit(model_data)\n\nset.seed(123)\ntrain_index &lt;- sample(nrow(model_data), 0.8 * nrow(model_data))\ntrain_data &lt;- model_data[train_index, ]\ntest_data &lt;- model_data[-train_index, ]\n\nrf_model &lt;- randomForest(accident_severity ~ ., data = train_data, ntree = 100)\n\npredictions &lt;- predict(rf_model, newdata = test_data)\n\nconfusion &lt;- table(Predicted = predictions, Actual = test_data$accident_severity)\nprint(confusion)\n\n         Actual\nPredicted Slight Serious Fatal\n  Slight   85567   11647  1192\n  Serious    477     470   122\n  Fatal       20      12    28\n\naccuracy &lt;- mean(as.character(predictions) == as.character(test_data$accident_severity))\ncat(\"Doğruluk Oranı:\", round(accuracy * 100, 2), \"%\\n\")\n\nDoğruluk Oranı: 86.47 %\n\n\n\nconf_mat &lt;- table(Predicted = predictions, Actual = test_data$accident_severity)\n\naccuracy &lt;- sum(diag(conf_mat)) / sum(conf_mat)\n\ncat(\"Doğruluk Oranı:\", round(accuracy * 100, 2), \"%\\n\")\n\nDoğruluk Oranı: 86.47 %"
  }
]